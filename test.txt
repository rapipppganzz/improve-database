--[[
    🏔️ AUTO MOUNTAIN CLIMBER - DELTA ANDROID SIMPLE & GUI-ONLY
    ✅ Semua kontrol dari GUI
    ✅ Tidak ada /start /stop di chat
    ✅ GUI kecil & stabil
    ✅ Cocok untuk semua executor mobile
]]

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local rootPart = character:WaitForChild("HumanoidRootPart")

-- Config
_G.Config = _G.Config or {
    Enabled = false,
    WalkSpeed = 25,
    AutoJump = true,
    SearchRadius = 80,
    SearchHeight = 150,
    TargetPosition = nil
}

-- ========== TARGET FINDER ==========
local function findHighestPoint()
    local bestPosition = nil
    local highestY = -math.huge
    
    for x = -_G.Config.SearchRadius, _G.Config.SearchRadius, 20 do
        for z = -_G.Config.SearchRadius, _G.Config.SearchRadius, 20 do
            local scanPos = Vector3.new(rootPart.Position.X + x, rootPart.Position.Y + _G.Config.SearchHeight, rootPart.Position.Z + z)
            local ray = Ray.new(scanPos, Vector3.new(0, -_G.Config.SearchHeight * 2, 0))
            local hit, position = workspace:FindPartOnRayWithIgnoreList(ray, {character})
            
            if hit and position.Y > highestY then
                highestY = position.Y
                bestPosition = position
            end
        end
    end
    
    return bestPosition or rootPart.Position + Vector3.new(0, 20, 0)
end

-- ========== NAVIGATION ==========
local lastStuckCheck = tick()
local lastPosition = rootPart.Position

local function moveTowardsTarget(target)
    if not target then return end
    
    local direction = (target - rootPart.Position).Unit
    humanoid:Move(direction)
    
    -- Auto jump jika dekat dinding
    if _G.Config.AutoJump then
        local rayOrigin = rootPart.Position + Vector3.new(0, 2, 0)
        local rayDirection = direction * 10
        local ray = Ray.new(rayOrigin, rayDirection)
        local hit = workspace:FindPartOnRayWithIgnoreList(ray, {character})
        
        if hit and hit.CanCollide then
            humanoid.Jump = true
            task.wait(0.1)
        end
    end
end

-- ========== MAIN LOOP ==========
RunService.Heartbeat:Connect(function()
    if not _G.Config.Enabled then return end
    
    if not character or not character.Parent then return end
    if not humanoid or not rootPart then return end
    
    humanoid.WalkSpeed = _G.Config.WalkSpeed
    
    -- Cek stuck
    if tick() - lastStuckCheck < 2 then return end
    local currentPos = rootPart.Position
    local distanceMoved = (currentPos - lastPosition).Magnitude
    
    if distanceMoved < 1.5 then
        print("🔄 Stuck! Resetting...")
        _G.Config.TargetPosition = nil
        lastStuckCheck = tick()
        lastPosition = currentPos
        return
    end
    
    lastPosition = currentPos
    lastStuckCheck = tick()
    
    -- Set target
    if not _G.Config.TargetPosition then
        _G.Config.TargetPosition = findHighestPoint()
    end
    
    -- Move to target
    moveTowardsTarget(_G.Config.TargetPosition)
end)

-- ========== GUI (SIMPLE & MOBILE-FRIENDLY) ==========
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "MountainClimber"
ScreenGui.ResetOnSpawn = false
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

pcall(function()
    ScreenGui.Parent = player:WaitForChild("PlayerGui")
end)

local Main = Instance.new("Frame")
Main.Name = "MainFrame"
Main.Parent = ScreenGui
Main.Size = UDim2.new(0, 200, 0, 120)
Main.Position = UDim2.new(0.02, 0, 0.02, 0)
Main.BackgroundColor3 = Color3.fromRGB(30, 30, 50)
Main.BorderSizePixel = 2
Main.BorderColor3 = Color3.fromRGB(0, 150, 255)
Main.Active = true
Main.Draggable = true
Main.ZIndex = 100

local UICorner = Instance.new("UICorner")
UICorner.CornerRadius = UDim.new(0, 8)
UICorner.Parent = Main

local TitleBar = Instance.new("Frame")
TitleBar.Size = UDim2.new(1, 0, 0, 30)
TitleBar.Position = UDim2.new(0, 0, 0, 0)
TitleBar.BackgroundColor3 = Color3.fromRGB(0, 100, 200)
TitleBar.Parent = Main

local Title = Instance.new("TextLabel")
Title.Text = "🏔️ MOUNTAIN CLIMBER"
Title.Size = UDim2.new(0.9, 0, 1, 0)
Title.Position = UDim2.new(0.05, 0, 0, 0)
Title.BackgroundTransparency = 1
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.Font = Enum.Font.GothamBold
Title.TextSize = 16
Title.Parent = TitleBar

local CloseBtn = Instance.new("TextButton")
CloseBtn.Size = UDim2.new(0, 24, 0, 24)
CloseBtn.Position = UDim2.new(0.93, 0, 0.1, 0)
CloseBtn.Text = "✕"
CloseBtn.TextSize = 18
CloseBtn.BackgroundColor3 = Color3.fromRGB(220, 0, 0)
CloseBtn.BorderSizePixel = 0
CloseBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
CloseBtn.Parent = TitleBar

local Content = Instance.new("Frame")
Content.Size = UDim2.new(1, 0, 0, 80)
Content.Position = UDim2.new(0, 0, 0.3, 0)
Content.BackgroundTransparency = 1
Content.Parent = Main

local ToggleBtn = Instance.new("TextButton")
ToggleBtn.Size = UDim2.new(1, 0, 0, 40)
ToggleBtn.Position = UDim2.new(0, 0, 0, 0)
ToggleBtn.Text = "🚀 START CLIMBING"
ToggleBtn.BackgroundColor3 = Color3.fromRGB(0, 150, 0)
ToggleBtn.BorderSizePixel = 0
ToggleBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
ToggleBtn.Font = Enum.Font.GothamBold
ToggleBtn.TextSize = 14
ToggleBtn.Parent = Content

local SpeedLabel = Instance.new("TextLabel")
SpeedLabel.Text = "⚡ SPEED: " .. _G.Config.WalkSpeed
SpeedLabel.Size = UDim2.new(1, 0, 0, 20)
SpeedLabel.Position = UDim2.new(0, 0, 0.2, 0)
SpeedLabel.BackgroundTransparency = 1
SpeedLabel.TextColor3 = Color3.fromRGB(255, 255, 0)
SpeedLabel.Font = Enum.Font.GothamBold
SpeedLabel.TextSize = 12
SpeedLabel.Parent = Content

local SpeedDown = Instance.new("TextButton")
SpeedDown.Size = UDim2.new(0.48, 0, 0, 30)
SpeedDown.Position = UDim2.new(0, 0, 0.4, 0)
SpeedDown.Text = "➖ SPEED"
SpeedDown.BackgroundColor3 = Color3.fromRGB(200, 100, 0)
SpeedDown.BorderSizePixel = 0
SpeedDown.TextColor3 = Color3.fromRGB(255, 255, 255)
SpeedDown.Font = Enum.Font.GothamBold
SpeedDown.TextSize = 12
SpeedDown.Parent = Content

local SpeedUp = Instance.new("TextButton")
SpeedUp.Size = UDim2.new(0.48, 0, 0, 30)
SpeedUp.Position = UDim2.new(0.52, 0, 0.4, 0)
SpeedUp.Text = "➕ SPEED"
SpeedUp.BackgroundColor3 = Color3.fromRGB(0, 100, 200)
SpeedUp.BorderSizePixel = 0
SpeedUp.TextColor3 = Color3.fromRGB(255, 255, 255)
SpeedUp.Font = Enum.Font.GothamBold
SpeedUp.TextSize = 12
SpeedUp.Parent = Content

local JumpToggle = Instance.new("TextButton")
JumpToggle.Size = UDim2.new(1, 0, 0, 30)
JumpToggle.Position = UDim2.new(0, 0, 0.6, 0)
JumpToggle.Text = "🦘 AUTO JUMP: ON"
JumpToggle.BackgroundColor3 = Color3.fromRGB(0, 120, 80)
JumpToggle.BorderSizePixel = 0
JumpToggle.TextColor3 = Color3.fromRGB(255, 255, 255)
JumpToggle.Font = Enum.Font.GothamBold
JumpToggle.TextSize = 12
JumpToggle.Parent = Content

-- ========== BUTTON LOGIC ==========
ToggleBtn.MouseButton1Click:Connect(function()
    _G.Config.Enabled = not _G.Config.Enabled
    if _G.Config.Enabled then
        ToggleBtn.Text = "🛑 STOP CLIMBING"
        ToggleBtn.BackgroundColor3 = Color3.fromRGB(200, 0, 0)
        _G.Config.TargetPosition = nil
        print("✅ Mountain Climber: STARTED")
    else
        ToggleBtn.Text = "🚀 START CLIMBING"
        ToggleBtn.BackgroundColor3 = Color3.fromRGB(0, 150, 0)
        humanoid:Move(Vector3.new(0, 0, 0))
        print("🛑 Mountain Climber: STOPPED")
    end
end)

SpeedUp.MouseButton1Click:Connect(function()
    _G.Config.WalkSpeed = math.min(50, _G.Config.WalkSpeed + 5)
    SpeedLabel.Text = "⚡ SPEED: " .. _G.Config.WalkSpeed
    humanoid.WalkSpeed = _G.Config.WalkSpeed
end)

SpeedDown.MouseButton1Click:Connect(function()
    _G.Config.WalkSpeed = math.max(16, _G.Config.WalkSpeed - 5)
    SpeedLabel.Text = "⚡ SPEED: " .. _G.Config.WalkSpeed
    humanoid.WalkSpeed = _G.Config.WalkSpeed
end)

JumpToggle.MouseButton1Click:Connect(function()
    _G.Config.AutoJump = not _G.Config.AutoJump
    if _G.Config.AutoJump then
        JumpToggle.Text = "🦘 AUTO JUMP: ON"
        JumpToggle.BackgroundColor3 = Color3.fromRGB(0, 120, 80)
    else
        JumpToggle.Text = "❌ AUTO JUMP: OFF"
        JumpToggle.BackgroundColor3 = Color3.fromRGB(120, 0, 0)
    end
end)

CloseBtn.MouseButton1Click:Connect(function()
    _G.Config.Enabled = false
    humanoid:Move(Vector3.new(0, 0, 0))
    ScreenGui:Destroy()
end)

-- Respawn handler
player.CharacterAdded:Connect(function(newChar)
    character = newChar
    task.wait(1)
    humanoid = character:WaitForChild("Humanoid")
    rootPart = character:WaitForChild("HumanoidRootPart")
    _G.Config.Enabled = false
    _G.Config.TargetPosition = nil
end)

-- Cleanup
ScreenGui.Destroying:Connect(function()
    if _G.Config then
        _G.Config.Enabled = false
    end
end)

print("✅ MOUNTAIN CLIMBER LOADED - GUI-ONLY VERSION")
print("📱 Optimized for Delta Android")
print("🛠️ No chat commands, all from GUI")