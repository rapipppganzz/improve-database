--[[
    üèîÔ∏è AUTO MOUNTAIN CLIMBER - LITE VERSION
    Small GUI + Better Navigation
]]

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local PathfindingService = game:GetService("PathfindingService")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local rootPart = character:WaitForChild("HumanoidRootPart")

-- Config
_G.Config = _G.Config or {
    Enabled = false,
    WalkSpeed = 25,
    AutoJump = true,
    SearchRadius = 150,
    SearchHeight = 300,
    TargetPosition = nil
}

-- ========== IMPROVED TARGET FINDER ==========
local function findHighestPoint()
    local bestPosition = rootPart.Position + Vector3.new(0, 50, 0) -- Default naik aja
    local highestY = -math.huge
    
    -- Cari part tinggi di sekitar
    for _, part in pairs(workspace:GetDescendants()) do
        if part:IsA("Part") and part.CanCollide then
            local distance = (rootPart.Position - part.Position).Magnitude
            if distance < _G.Config.SearchRadius and part.Position.Y > highestY then
                highestY = part.Position.Y
                bestPosition = part.Position
            end
        end
    end
    
    -- Cari finish line
    local finishNames = {"Finish", "End", "Goal", "Win", "Complete", "EndPoint", "FinishLine", "Victory"}
    for _, name in pairs(finishNames) do
        local part = workspace:FindFirstChild(name)
        if part then
            bestPosition = part.Position
            break
        end
    end
    
    return bestPosition
end

-- ========== SIMPLE NAVIGATION ==========
local function moveToTarget()
    if not _G.Config.TargetPosition then
        _G.Config.TargetPosition = findHighestPoint()
    end
    
    local target = _G.Config.TargetPosition
    local direction = (target - rootPart.Position).Unit
    
    -- Gerak ke target
    humanoid:Move(direction)
    
    -- Cek jika dekat dengan target, cari target baru
    local distance = (rootPart.Position - target).Magnitude
    if distance < 10 then
        _G.Config.TargetPosition = nil
    end
    
    -- Auto jump kalau ada halangan
    if _G.Config.AutoJump then
        local ray = Ray.new(rootPart.Position + Vector3.new(0, 2, 0), rootPart.CFrame.LookVector * 6)
        local hit = workspace:FindPartOnRay(ray, character)
        if hit then
            humanoid.Jump = true
        end
    end
end

-- ========== TINY GUI ==========
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = game:GetService("CoreGui")
ScreenGui.Name = "MiniClimber"

-- Main Frame KECIL
local Main = Instance.new("Frame")
Main.Parent = ScreenGui
Main.Size = UDim2.new(0, 200, 0, 180) -- KECIL BANGET
Main.Position = UDim2.new(0.02, 0, 0.02, 0)
Main.BackgroundColor3 = Color3.fromRGB(20, 20, 40)
Main.BorderSizePixel = 2
Main.BorderColor3 = Color3.fromRGB(0, 200, 255)
Main.Active = true
Main.Draggable = true

-- Title kecil
local Title = Instance.new("TextLabel")
Title.Parent = Main
Title.Text = "üèîÔ∏è CLIMBER"
Title.Size = UDim2.new(1, 0, 0, 25)
Title.BackgroundColor3 = Color3.fromRGB(0, 100, 200)
Title.TextColor3 = Color3.white
Title.Font = Enum.Font.GothamBold
Title.TextSize = 14

-- Toggle Button
local ToggleBtn = Instance.new("TextButton")
ToggleBtn.Parent = Main
ToggleBtn.Text = "üöÄ START"
ToggleBtn.Size = UDim2.new(0.9, 0, 0, 30)
ToggleBtn.Position = UDim2.new(0.05, 0, 0.18, 0)
ToggleBtn.BackgroundColor3 = Color3.fromRGB(0, 150, 0)
ToggleBtn.TextColor3 = Color3.white
ToggleBtn.Font = Enum.Font.GothamBold
ToggleBtn.TextSize = 12

-- Speed Controls kecil
local SpeedDown = Instance.new("TextButton")
SpeedDown.Parent = Main
SpeedDown.Text = "‚ûñ"
SpeedDown.Size = UDim2.new(0.2, 0, 0, 25)
SpeedDown.Position = UDim2.new(0.05, 0, 0.42, 0)
SpeedDown.BackgroundColor3 = Color3.fromRGB(200, 100, 0)
SpeedDown.TextColor3 = Color3.white
SpeedDown.Font = Enum.Font.GothamBold

local SpeedUp = Instance.new("TextButton")
SpeedUp.Parent = Main
SpeedUp.Text = "‚ûï"
SpeedUp.Size = UDim2.new(0.2, 0, 0, 25)
SpeedUp.Position = UDim2.new(0.3, 0, 0.42, 0)
SpeedUp.BackgroundColor3 = Color3.fromRGB(0, 100, 200)
SpeedUp.TextColor3 = Color3.white
SpeedUp.Font = Enum.Font.GothamBold

-- Speed Label kecil
local SpeedLabel = Instance.new("TextLabel")
SpeedLabel.Parent = Main
SpeedLabel.Text = "‚ö° " .. _G.Config.WalkSpeed
SpeedLabel.Size = UDim2.new(0.4, 0, 0, 25)
SpeedLabel.Position = UDim2.new(0.55, 0, 0.42, 0)
SpeedLabel.BackgroundTransparency = 1
SpeedLabel.TextColor3 = Color3.fromRGB(255, 255, 0)
SpeedLabel.Font = Enum.Font.GothamBold
SpeedLabel.TextSize = 14

-- Jump Toggle kecil
local JumpBtn = Instance.new("TextButton")
JumpBtn.Parent = Main
JumpBtn.Text = "ü¶ò JUMP: ON"
JumpBtn.Size = UDim2.new(0.9, 0, 0, 25)
JumpBtn.Position = UDim2.new(0.05, 0, 0.62, 0)
JumpBtn.BackgroundColor3 = Color3.fromRGB(0, 120, 80)
JumpBtn.TextColor3 = Color3.white
JumpBtn.Font = Enum.Font.GothamBold
JumpBtn.TextSize = 11

-- Status kecil
local Status = Instance.new("TextLabel")
Status.Parent = Main
Status.Text = "READY"
Status.Size = UDim2.new(0.9, 0, 0, 40)
Status.Position = UDim2.new(0.05, 0, 0.80, 0)
Status.BackgroundColor3 = Color3.fromRGB(30, 30, 60)
Status.TextColor3 = Color3.fromRGB(0, 255, 150)
Status.Font = Enum.Font.Gotham
Status.TextSize = 10
Status.TextWrapped = true

-- Close button kecil
local CloseBtn = Instance.new("TextButton")
CloseBtn.Parent = Main
CloseBtn.Text = "X"
CloseBtn.Size = UDim2.new(0, 20, 0, 20)
CloseBtn.Position = UDim2.new(0.9, 0, 0.02, 0)
CloseBtn.BackgroundColor3 = Color3.fromRGB(200, 0, 0)
CloseBtn.TextColor3 = Color3.white
CloseBtn.Font = Enum.Font.GothamBold

-- ========== SIMPLE BUTTON FUNCTIONS ==========
ToggleBtn.MouseButton1Click:Connect(function()
    _G.Config.Enabled = not _G.Config.Enabled
    
    if _G.Config.Enabled then
        ToggleBtn.Text = "üõë STOP"
        ToggleBtn.BackgroundColor3 = Color3.fromRGB(200, 0, 0)
        Status.Text = "CLIMBING..."
        print("START CLIMBING")
    else
        ToggleBtn.Text = "üöÄ START"
        ToggleBtn.BackgroundColor3 = Color3.fromRGB(0, 150, 0)
        Status.Text = "READY"
        humanoid:Move(Vector3.new(0,0,0))
        print("STOP CLIMBING")
    end
end)

SpeedUp.MouseButton1Click:Connect(function()
    _G.Config.WalkSpeed = math.min(50, _G.Config.WalkSpeed + 5)
    SpeedLabel.Text = "‚ö° " .. _G.Config.WalkSpeed
    humanoid.WalkSpeed = _G.Config.WalkSpeed
    Status.Text = "SPEED: " .. _G.Config.WalkSpeed
end)

SpeedDown.MouseButton1Click:Connect(function()
    _G.Config.WalkSpeed = math.max(16, _G.Config.WalkSpeed - 5)
    SpeedLabel.Text = "‚ö° " .. _G.Config.WalkSpeed
    humanoid.WalkSpeed = _G.Config.WalkSpeed
    Status.Text = "SPEED: " .. _G.Config.WalkSpeed
end)

JumpBtn.MouseButton1Click:Connect(function()
    _G.Config.AutoJump = not _G.Config.AutoJump
    if _G.Config.AutoJump then
        JumpBtn.Text = "ü¶ò JUMP: ON"
        JumpBtn.BackgroundColor3 = Color3.fromRGB(0, 120, 80)
    else
        JumpBtn.Text = "‚ùå JUMP: OFF"
        JumpBtn.BackgroundColor3 = Color3.fromRGB(120, 0, 0)
    end
end)

CloseBtn.MouseButton1Click:Connect(function()
    _G.Config.Enabled = false
    humanoid:Move(Vector3.new(0,0,0))
    ScreenGui:Destroy()
end)

-- ========== IMPROVED MOVEMENT ==========
local lastStuckCheck = os.time()
local lastPosition = rootPart.Position

local function checkIfStuck()
    if os.time() - lastStuckCheck < 3 then return false end
    
    local currentPos = rootPart.Position
    local distanceMoved = (currentPos - lastPosition).Magnitude
    
    if distanceMoved < 3 then
        _G.Config.TargetPosition = nil
        humanoid.Jump = true
        Status.Text = "STUCK! JUMPING..."
        return true
    end
    
    lastPosition = currentPos
    lastStuckCheck = os.time()
    return false
end

-- ========== MAIN LOOP ==========
RunService.Heartbeat:Connect(function()
    if not _G.Config.Enabled then return end
    
    -- Reset kalo karakter mati
    if not character or not character.Parent then
        character = player.CharacterAdded:Wait()
        humanoid = character:WaitForChild("Humanoid")
        rootPart = character:WaitForChild("HumanoidRootPart")
        return
    end
    
    -- Cek kalo stuck
    checkIfStuck()
    
    -- Navigasi
    local success, err = pcall(moveToTarget)
    if not success then
        Status.Text = "ERROR: " .. err
    end
    
    -- Update status
    if _G.Config.TargetPosition then
        local dist = math.floor((rootPart.Position - _G.Config.TargetPosition).Magnitude)
        local height = math.floor(rootPart.Position.Y)
        Status.Text = "CLIMBING\nDist: " .. dist .. "\nY: " .. height
    end
end)

-- ========== RESPAWN HANDLER ==========
player.CharacterAdded:Connect(function(newChar)
    character = newChar
    humanoid = character:WaitForChild("Humanoid")
    rootPart = character:WaitForChild("HumanoidRootPart")
    _G.Config.TargetPosition = nil
    Status.Text = "RESPAWNED"
end)

print("========================================")
print("üèîÔ∏è MINI MOUNTAIN CLIMBER LOADED!")
print("‚úÖ Small GUI - No screen blocking")
print("‚úÖ Simple but effective navigation") 
print("========================================")