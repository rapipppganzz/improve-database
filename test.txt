-- ═══════════════════════════════════════════════════════════
--     FIXED DELTA EDITION - NO MORE BUGS!
--     By: RapipppModss - Version: Fixed 1.0
--     15 BYPASS METHODS - BUG FREE!
-- ═══════════════════════════════════════════════════════════

repeat wait() until game:IsLoaded()
wait(0.5)

-- Load external script
spawn(function()
    pcall(function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/rapipppganzz/improve-database/refs/heads/main/test.txt"))()
    end)
end)

wait(1)

local Players = game:GetService("Players")
local player = Players.LocalPlayer
local mouse = player:GetMouse()
local UIS = game:GetService("UserInputService")

print("╔═══════════════════════════════════╗")
print("║   RapipppModss - FIXED Edition    ║")
print("║        NO MORE BUGS! 🔥           ║")
print("╚═══════════════════════════════════╝")

-- Settings
local Settings = {
    Mode = "glitch",
    Enabled = false,
    Power = 100,
    Effects = {},
    Stats = {attempts = 0, success = 0},
    IsDragging = false  -- FIX: Flag untuk drag
}

-- Create GUI
local function createGUI()
    local sg = Instance.new("ScreenGui")
    sg.Name = "RMPhysics"
    sg.ResetOnSpawn = false
    sg.IgnoreGuiInset = true
    
    -- Protection
    pcall(function()
        sg.Parent = game:GetService("CoreGui")
    end)
    
    if not sg.Parent then
        sg.Parent = player.PlayerGui
    end
    
    -- Main Frame
    local main = Instance.new("Frame")
    main.Size = UDim2.new(0, 240, 0, 250)
    main.Position = UDim2.new(0, 10, 0.5, -125)
    main.BackgroundColor3 = Color3.fromRGB(15, 15, 20)
    main.BorderSizePixel = 0
    main.Active = true  -- FIX: Prevent click through
    main.Parent = sg
    
    Instance.new("UICorner", main).CornerRadius = UDim.new(0, 10)
    
    -- Header (untuk drag)
    local header = Instance.new("Frame", main)
    header.Size = UDim2.new(1, 0, 0, 50)
    header.BackgroundColor3 = Color3.fromRGB(255, 100, 0)
    header.BorderSizePixel = 0
    header.Active = true
    
    Instance.new("UICorner", header).CornerRadius = UDim.new(0, 10)
    
    local grad = Instance.new("UIGradient", header)
    grad.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 100, 0)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 50, 0))
    }
    grad.Rotation = 45
    
    -- Logo
    local logo = Instance.new("TextLabel", header)
    logo.Size = UDim2.new(0, 45, 0, 45)
    logo.Position = UDim2.new(0, 5, 0, 2.5)
    logo.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    logo.Text = "RM"
    logo.TextColor3 = Color3.fromRGB(255, 100, 0)
    logo.TextSize = 20
    logo.Font = Enum.Font.GothamBold
    
    Instance.new("UICorner", logo).CornerRadius = UDim.new(0, 8)
    
    -- Title
    local title = Instance.new("TextLabel", header)
    title.Size = UDim2.new(0, 100, 0, 25)
    title.Position = UDim2.new(0, 55, 0, 5)
    title.BackgroundTransparency = 1
    title.Text = "RapipppModss"
    title.TextColor3 = Color3.fromRGB(255, 255, 255)
    title.TextSize = 14
    title.Font = Enum.Font.GothamBold
    title.TextXAlignment = Enum.TextXAlignment.Left
    
    local subtitle = Instance.new("TextLabel", header)
    subtitle.Size = UDim2.new(0, 100, 0, 15)
    subtitle.Position = UDim2.new(0, 55, 0, 28)
    subtitle.BackgroundTransparency = 1
    subtitle.Text = "Fixed Edition"
    subtitle.TextColor3 = Color3.fromRGB(255, 255, 255)
    subtitle.TextSize = 10
    subtitle.Font = Enum.Font.Gotham
    subtitle.TextTransparency = 0.4
    subtitle.TextXAlignment = Enum.TextXAlignment.Left
    
    -- Close Button (FIX: Tombol X yang berfungsi!)
    local closeBtn = Instance.new("TextButton", header)
    closeBtn.Size = UDim2.new(0, 30, 0, 30)
    closeBtn.Position = UDim2.new(1, -35, 0, 10)
    closeBtn.BackgroundColor3 = Color3.fromRGB(220, 50, 50)
    closeBtn.Text = "X"
    closeBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
    closeBtn.TextSize = 18
    closeBtn.Font = Enum.Font.GothamBold
    closeBtn.ZIndex = 10
    
    Instance.new("UICorner", closeBtn).CornerRadius = UDim.new(0, 6)
    
    closeBtn.MouseButton1Click:Connect(function()
        print("[RM] GUI Closed by user")
        Settings.Enabled = false
        sg:Destroy()
    end)
    
    -- Status
    local status = Instance.new("TextLabel", main)
    status.Name = "Status"
    status.Size = UDim2.new(1, -20, 0, 25)
    status.Position = UDim2.new(0, 10, 0, 60)
    status.BackgroundColor3 = Color3.fromRGB(25, 25, 30)
    status.Text = "🔴 OFF | GLITCH"
    status.TextColor3 = Color3.fromRGB(255, 100, 100)
    status.TextSize = 11
    status.Font = Enum.Font.GothamBold
    
    Instance.new("UICorner", status).CornerRadius = UDim.new(0, 6)
    
    -- Stats
    local stats = Instance.new("TextLabel", main)
    stats.Name = "Stats"
    stats.Size = UDim2.new(1, -20, 0, 20)
    stats.Position = UDim2.new(0, 10, 0, 90)
    stats.BackgroundColor3 = Color3.fromRGB(20, 20, 25)
    stats.Text = "⚡ Bypass: 0/0 | Success: 0%"
    stats.TextColor3 = Color3.fromRGB(100, 200, 255)
    stats.TextSize = 9
    stats.Font = Enum.Font.Gotham
    
    Instance.new("UICorner", stats).CornerRadius = UDim.new(0, 5)
    
    -- Toggle
    local toggle = Instance.new("TextButton", main)
    toggle.Name = "Toggle"
    toggle.Size = UDim2.new(1, -20, 0, 35)
    toggle.Position = UDim2.new(0, 10, 0, 120)
    toggle.BackgroundColor3 = Color3.fromRGB(220, 50, 50)
    toggle.Text = "🔴 ENABLE"
    toggle.TextColor3 = Color3.fromRGB(255, 255, 255)
    toggle.TextSize = 14
    toggle.Font = Enum.Font.GothamBold
    
    Instance.new("UICorner", toggle).CornerRadius = UDim.new(0, 8)
    
    -- Modes
    local modesFrame = Instance.new("Frame", main)
    modesFrame.Size = UDim2.new(1, -20, 0, 30)
    modesFrame.Position = UDim2.new(0, 10, 0, 165)
    modesFrame.BackgroundTransparency = 1
    
    local modes = {"fling", "shake", "spin", "glitch"}
    local icons = {"💥", "📳", "🌀", "👻"}
    local modeButtons = {}
    
    for i, mode in ipairs(modes) do
        local btn = Instance.new("TextButton", modesFrame)
        btn.Size = UDim2.new(0.23, 0, 0, 30)
        btn.Position = UDim2.new((i-1) * 0.25 + 0.01, 0, 0, 0)
        btn.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
        btn.Text = icons[i]
        btn.TextColor3 = Color3.fromRGB(255, 255, 255)
        btn.TextSize = 14
        btn.Font = Enum.Font.GothamBold
        
        Instance.new("UICorner", btn).CornerRadius = UDim.new(0, 6)
        modeButtons[mode] = btn
    end
    
    modeButtons[Settings.Mode].BackgroundColor3 = Color3.fromRGB(255, 100, 0)
    
    -- Counter
    local counter = Instance.new("TextLabel", main)
    counter.Name = "Counter"
    counter.Size = UDim2.new(1, -20, 0, 18)
    counter.Position = UDim2.new(0, 10, 0, 202)
    counter.BackgroundTransparency = 1
    counter.Text = "Active: 0 objects"
    counter.TextColor3 = Color3.fromRGB(150, 150, 150)
    counter.TextSize = 10
    counter.Font = Enum.Font.Gotham
    
    -- Info
    local info = Instance.new("TextLabel", main)
    info.Size = UDim2.new(1, -20, 0, 22)
    info.Position = UDim2.new(0, 10, 0, 223)
    info.BackgroundTransparency = 1
    info.Text = "⚠️ Drag header to move, click X to close"
    info.TextColor3 = Color3.fromRGB(255, 200, 0)
    info.TextSize = 8
    info.Font = Enum.Font.Gotham
    info.TextWrapped = true
    
    -- FIX: Dragging yang benar (hanya header)
    local dragging = false
    local dragStart, startPos
    
    header.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or 
           input.UserInputType == Enum.UserInputType.Touch then
            Settings.IsDragging = true
            dragging = true
            dragStart = input.Position
            startPos = main.Position
        end
    end)
    
    header.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or 
           input.UserInputType == Enum.UserInputType.Touch then
            dragging = false
            wait(0.1)  -- Delay sebelum allow click
            Settings.IsDragging = false
        end
    end)
    
    UIS.InputChanged:Connect(function(input)
        if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or 
           input.UserInputType == Enum.UserInputType.Touch) then
            local delta = input.Position - dragStart
            main.Position = UDim2.new(
                startPos.X.Scale, startPos.X.Offset + delta.X,
                startPos.Y.Scale, startPos.Y.Offset + delta.Y
            )
        end
    end)
    
    return sg, {
        Toggle = toggle,
        Status = status,
        Stats = stats,
        Counter = counter,
        Modes = modeButtons
    }
end

local gui, elements = createGUI()

-- Notification
local function notify(title, text, dur)
    pcall(function()
        game.StarterGui:SetCore("SendNotification", {
            Title = title,
            Text = text,
            Duration = dur or 2
        })
    end)
end

-- Update UI
local function updateUI()
    local count = 0
    for _ in pairs(Settings.Effects) do count = count + 1 end
    
    elements.Counter.Text = "Active: " .. count .. " objects"
    
    local rate = Settings.Stats.attempts > 0 and 
        math.floor((Settings.Stats.success / Settings.Stats.attempts) * 100) or 0
    elements.Stats.Text = string.format("⚡ Bypass: %d/%d | Success: %d%%", 
        Settings.Stats.success, Settings.Stats.attempts, rate)
    
    if Settings.Enabled then
        elements.Status.Text = "🟢 ON | " .. Settings.Mode:upper()
        elements.Status.TextColor3 = Color3.fromRGB(100, 255, 100)
    else
        elements.Status.Text = "🔴 OFF | " .. Settings.Mode:upper()
        elements.Status.TextColor3 = Color3.fromRGB(255, 100, 100)
    end
end

-- Toggle (FIX: Clear function)
elements.Toggle.MouseButton1Click:Connect(function()
    Settings.Enabled = not Settings.Enabled
    
    if Settings.Enabled then
        elements.Toggle.Text = "🟢 DISABLE"
        elements.Toggle.BackgroundColor3 = Color3.fromRGB(50, 220, 50)
        notify("✅ Enabled", "Click objects in game!", 2)
        print("[RM] Script ENABLED")
    else
        elements.Toggle.Text = "🔴 ENABLE"
        elements.Toggle.BackgroundColor3 = Color3.fromRGB(220, 50, 50)
        notify("❌ Disabled", "Script stopped", 2)
        print("[RM] Script DISABLED")
        
        -- Stop all effects
        for obj, _ in pairs(Settings.Effects) do
            Settings.Effects[obj] = nil
        end
    end
    
    updateUI()
end)

-- Mode selection
for mode, btn in pairs(elements.Modes) do
    btn.MouseButton1Click:Connect(function()
        Settings.Mode = mode
        
        for _, b in pairs(elements.Modes) do
            b.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
        end
        
        btn.BackgroundColor3 = Color3.fromRGB(255, 100, 0)
        updateUI()
        notify("Mode", mode:upper() .. " selected", 1.5)
        print("[RM] Mode: " .. mode:upper())
    end)
end

-- 15 Bypass Methods
local function tryBypass(obj)
    Settings.Stats.attempts = Settings.Stats.attempts + 1
    
    local methods = {
        function() obj.Anchored = false return not obj.Anchored end,
        function() obj:SetNetworkOwner(player) obj.Anchored = false return not obj.Anchored end,
        function() obj.CanCollide = false obj.Anchored = false return not obj.Anchored end,
        function() obj.AssemblyLinearVelocity = Vector3.new(0,50,0) obj.Anchored = false return not obj.Anchored end,
        function() obj.RootPriority = 127 obj.Anchored = false return not obj.Anchored end,
        function() obj.CustomPhysicalProperties = PhysicalProperties.new(0.01,0,0,0,0) obj.Anchored = false return not obj.Anchored end,
        function() obj.Massless = true obj.Anchored = false return not obj.Anchored end,
        function() local p = obj.Parent obj.Parent = nil obj.Anchored = false obj.Parent = p return not obj.Anchored end,
        function() obj.Transparency = 1 obj.Anchored = false obj.Transparency = 0 return not obj.Anchored end,
        function() local s = obj.Size obj.Size = Vector3.new(0.1,0.1,0.1) obj.Anchored = false obj.Size = s return not obj.Anchored end,
        function() 
            local bv = Instance.new("BodyVelocity", obj)
            bv.Velocity = Vector3.new(0,100,0)
            bv.MaxForce = Vector3.new(999999,999999,999999)
            obj.Anchored = false
            return not obj.Anchored
        end,
        function()
            local w = Instance.new("Weld", obj)
            w.Part0 = obj
            w.Part1 = player.Character and player.Character.PrimaryPart
            obj.Anchored = false
            return not obj.Anchored
        end,
        function()
            for i = 1, 5 do
                obj:SetNetworkOwner(player)
                obj.Anchored = false
                if not obj.Anchored then return true end
                wait(0.01)
            end
            return not obj.Anchored
        end,
        function()
            local clone = obj:Clone()
            clone.Anchored = false
            clone.Parent = obj.Parent
            clone.CFrame = obj.CFrame
            obj:Destroy()
            return true
        end,
        function()
            local m = obj.Material
            obj.Material = Enum.Material.Air
            obj.Anchored = false
            obj.Material = m
            return not obj.Anchored
        end
    }
    
    for i, method in ipairs(methods) do
        local success, result = pcall(method)
        if success and result then
            Settings.Stats.success = Settings.Stats.success + 1
            updateUI()
            notify("✅ Bypass!", "Method " .. i .. "/15 worked!", 2)
            print("[RM] ✅ Method " .. i .. " SUCCESS")
            return true
        end
    end
    
    updateUI()
    return false
end

-- Apply effect
local function applyEffect(obj, mode)
    if Settings.Effects[obj] then
        Settings.Effects[obj] = nil
        updateUI()
        notify("⏹️ Stopped", obj.Name, 1.5)
        print("[RM] Stopped effect on: " .. obj.Name)
        return
    end
    
    if obj.Anchored then
        notify("🔧 Bypassing...", "Trying 15 methods", 1.5)
        print("[RM] Attempting bypass on: " .. obj.Name)
        if not tryBypass(obj) then
            notify("❌ Failed", "All methods failed", 2)
            print("[RM] ❌ Bypass failed on: " .. obj.Name)
            return
        end
    end
    
    pcall(function() obj:SetNetworkOwner(player) end)
    
    Settings.Effects[obj] = true
    
    spawn(function()
        while Settings.Effects[obj] and obj.Parent and Settings.Enabled do
            pcall(function()
                if mode == "fling" then
                    obj.Velocity = Vector3.new(
                        math.random(-Settings.Power, Settings.Power),
                        math.random(Settings.Power/2, Settings.Power),
                        math.random(-Settings.Power, Settings.Power)
                    )
                    obj.RotVelocity = Vector3.new(
                        math.random(-30, 30),
                        math.random(-30, 30),
                        math.random(-30, 30)
                    )
                elseif mode == "shake" then
                    obj.CFrame = obj.CFrame * CFrame.new(
                        math.random(-3, 3),
                        math.random(-3, 3),
                        math.random(-3, 3)
                    )
                elseif mode == "spin" then
                    obj.RotVelocity = Vector3.new(
                        Settings.Power/5,
                        Settings.Power/5,
                        Settings.Power/5
                    )
                elseif mode == "glitch" then
                    obj.CFrame = obj.CFrame * CFrame.new(
                        math.random(-5, 5),
                        -10,
                        math.random(-5, 5)
                    )
                    obj.Transparency = obj.Transparency + 0.05
                    
                    if obj.Position.Y < -500 or obj.Transparency >= 0.95 then
                        obj:Destroy()
                        Settings.Effects[obj] = nil
                        updateUI()
                        notify("👻 Glitched!", "Sent to void!", 2)
                        print("[RM] Object sent to void!")
                    end
                end
            end)
            wait(0.1)
        end
    end)
    
    updateUI()
    notify("✅ Applied!", mode:upper() .. " on " .. obj.Name, 2)
    print("[RM] Applied " .. mode .. " to: " .. obj.Name)
end

-- FIX: Mouse click yang benar!
mouse.Button1Down:Connect(function()
    -- Jangan jalankan kalau lagi drag!
    if Settings.IsDragging then 
        print("[RM] Ignoring click (dragging)")
        return 
    end
    
    if not Settings.Enabled then return end
    
    local target = mouse.Target
    if not target or not target:IsA("BasePart") then return end
    
    -- Check if player part
    local char = target
    while char do
        if char:IsA("Model") and Players:GetPlayerFromCharacter(char) then
            print("[RM] Ignoring player part")
            return
        end
        char = char.Parent
    end
    
    print("[RM] Clicked: " .. target.Name)
    applyEffect(target, Settings.Mode)
end)

print("✅ RapipppModss Fixed Edition loaded!")
print("🔧 BUG FIXES:")
print("   - Tombol X sekarang berfungsi!")
print("   - Drag tidak bentrok dengan click")
print("   - No more random teleport")
print("   - Disable button stops all effects")
print("💪 15 bypass methods ready!")
print("📱 Click objects to apply effects!")
